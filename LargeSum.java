package ProjectEuler;

import java.util.ArrayList;

public class LargeSum {
	public static void main(String[] args) {
		ArrayList<Double> list = new ArrayList<>();
		list.add(37107287533902102798797998220837590246510135740250D);
		list.add(46376937677490009712648124896970078050417018260538D);
		list.add(74324986199524741059474233309513058123726617309629D);
		list.add(91942213363574161572522430563301811072406154908250D);
		list.add(23067588207539346171171980310421047513778063246676D);
		list.add(89261670696623633820136378418383684178734361726757D);
		list.add(28112879812849979408065481931592621691275889832738D);
		list.add(44274228917432520321923589422876796487670272189318D);
		list.add(47451445736001306439091167216856844588711603153276D);
		list.add(70386486105843025439939619828917593665686757934951D);
		list.add(62176457141856560629502157223196586755079324193331D);
		list.add(64906352462741904929101432445813822663347944758178D);
		list.add(92575867718337217661963751590579239728245598838407D);
		list.add(58203565325359399008402633568948830189458628227828D);
		list.add(80181199384826282014278194139940567587151170094390D);
		list.add(35398664372827112653829987240784473053190104293586D);
		list.add(86515506006295864861532075273371959191420517255829D);
		list.add(71693888707715466499115593487603532921714970056938D);
		list.add(54370070576826684624621495650076471787294438377604D);
		list.add(53282654108756828443191190634694037855217779295145D);
		list.add(36123272525000296071075082563815656710885258350721D);
		list.add(45876576172410976447339110607218265236877223636045D);
		list.add(17423706905851860660448207621209813287860733969412D);
		list.add(81142660418086830619328460811191061556940512689692D);
		list.add(51934325451728388641918047049293215058642563049483D);
		list.add(62467221648435076201727918039944693004732956340691D);
		list.add(15732444386908125794514089057706229429197107928209D);
		list.add(55037687525678773091862540744969844508330393682126D);
		list.add(18336384825330154686196124348767681297534375946515D);
		list.add(80386287592878490201521685554828717201219257766954D);
		list.add(78182833757993103614740356856449095527097864797581D);
		list.add(16726320100436897842553539920931837441497806860984D);
		list.add(48403098129077791799088218795327364475675590848030D);
		list.add(87086987551392711854517078544161852424320693150332D);
		list.add(59959406895756536782107074926966537676326235447210D);
		list.add(69793950679652694742597709739166693763042633987085D);
		list.add(41052684708299085211399427365734116182760315001271D);
		list.add(65378607361501080857009149939512557028198746004375D);
		list.add(35829035317434717326932123578154982629742552737307D);
		list.add(94953759765105305946966067683156574377167401875275D);
		list.add(88902802571733229619176668713819931811048770190271D);
		list.add(25267680276078003013678680992525463401061632866526D);
		list.add(36270218540497705585629946580636237993140746255962D);
		list.add(24074486908231174977792365466257246923322810917141D);
		list.add(91430288197103288597806669760892938638285025333403D);
		list.add(34413065578016127815921815005561868836468420090470D);
		list.add(23053081172816430487623791969842487255036638784583D);
		list.add(11487696932154902810424020138335124462181441773470D);
		list.add(63783299490636259666498587618221225225512486764533D);
		list.add(67720186971698544312419572409913959008952310058822D);
		list.add(95548255300263520781532296796249481641953868218774D);
		list.add(76085327132285723110424803456124867697064507995236D);
		list.add(37774242535411291684276865538926205024910326572967D);
		list.add(23701913275725675285653248258265463092207058596522D);
		list.add(29798860272258331913126375147341994889534765745501D);
		list.add(18495701454879288984856827726077713721403798879715D);
		list.add(38298203783031473527721580348144513491373226651381D);
		list.add(34829543829199918180278916522431027392251122869539D);
		list.add(40957953066405232632538044100059654939159879593635D);
		list.add(29746152185502371307642255121183693803580388584903D);
		list.add(41698116222072977186158236678424689157993532961922D);
		list.add(62467957194401269043877107275048102390895523597457D);
		list.add(23189706772547915061505504953922979530901129967519D);
		list.add(86188088225875314529584099251203829009407770775672D);
		list.add(11306739708304724483816533873502340845647058077308D);
		list.add(82959174767140363198008187129011875491310547126581D);
		list.add(97623331044818386269515456334926366572897563400500D);
		list.add(42846280183517070527831839425882145521227251250327D);
		list.add(55121603546981200581762165212827652751691296897789D);
		list.add(32238195734329339946437501907836945765883352399886D);
		list.add(75506164965184775180738168837861091527357929701337D);
		list.add(62177842752192623401942399639168044983993173312731D);
		list.add(32924185707147349566916674687634660915035914677504D);
		list.add(99518671430235219628894890102423325116913619626622D);
		list.add(73267460800591547471830798392868535206946944540724D);
		list.add(76841822524674417161514036427982273348055556214818D);
		list.add(97142617910342598647204516893989422179826088076852D);
		list.add(87783646182799346313767754307809363333018982642090D);
		list.add(10848802521674670883215120185883543223812876952786D);
		list.add(71329612474782464538636993009049310363619763878039D);
		list.add(62184073572399794223406235393808339651327408011116D);
		list.add(66627891981488087797941876876144230030984490851411D);
		list.add(60661826293682836764744779239180335110989069790714D);
		list.add(85786944089552990653640447425576083659976645795096D);
		list.add(66024396409905389607120198219976047599490197230297D);
		list.add(64913982680032973156037120041377903785566085089252D);
		list.add(16730939319872750275468906903707539413042652315011D);
		list.add(94809377245048795150954100921645863754710598436791D);
		list.add(78639167021187492431995700641917969777599028300699D);
		list.add(15368713711936614952811305876380278410754449733078D);
		list.add(40789923115535562561142322423255033685442488917353D);
		list.add(44889911501440648020369068063960672322193204149535D);
		list.add(41503128880339536053299340368006977710650566631954D);
		list.add(81234880673210146739058568557934581403627822703280D);
		list.add(82616570773948327592232845941706525094512325230608D);
		list.add(22918802058777319719839450180888072429661980811197D);
		list.add(77158542502016545090413245809786882778948721859617D);
		list.add(72107838435069186155435662884062257473692284509516D);
		list.add(20849603980134001723930671666823555245252804609722D);
		list.add(53503534226472524250874054075591789781264330331690D);
		double sum = 0D;
		for(int i = 0; i<list.size(); i++) {
			sum+=list.get(i);
		} 
		String str = "" + sum;
		for(int i = 0; i<11;i++) {
			if(str.charAt(i)!='.') {
				System.out.print(str.charAt(i));
			}
		}
	}
}
